{# The comment below is to prevent edits to the rendered workflow file. Feel free to edit the template file. -#}
# DO NOT EDIT THIS FILE
#
# This workflow is generated from:
# Template: https://github.com/per1234/github-actions-workflow-resources/blob/master/templates/update-workflows.yml.j2
# Data file in this repository: .github/workflows/data/update-workflows_data.yml
#
# Edits to either of those files will trigger an automated update to the workflow.

name: Update Workflows

on:
  pull_request:
    paths:
      - ".github/workflows/data/**"
      - ".github/workflows/update-workflows.yml"
  push:
    paths:
      - ".github/workflows/data/**"
      - ".github/workflows/update-workflows.yml"
  schedule:
    # Run the workflow hourly
    - cron:  '*/5 * * * *'
  # Trigger workflow via GitHub API
  repository_dispatch:
    types: update-workflows

env:
  # Repository containing the workflow templates
  TEMPLATE_REPOSITORY_OWNER: {{ env["TEMPLATE_REPOSITORY_OWNER"] }}
  TEMPLATE_REPOSITORY_NAME: {{ env["TEMPLATE_REPOSITORY_NAME"] }}

jobs:
  check-for-template-updates:
    runs-on: ubuntu-latest

    env:
      # In seconds
      WORKFLOW_SCHEDULE_INTERVAL: 3600

    outputs:
      template-updated: {{ "${{" }} steps.check-for-template-updates.outputs.template-updated {{ "}}" }}

    steps:
      - name: Get workflow template repo data from GitHub API
        # Check for template updates when the workflow is triggered by the schedule event to avoid running the update-workflows job unnecessarily
        if: github.event_name == 'schedule'
        id: get-template-repo-data
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: {{ "${{" }} secrets.GITHUB_TOKEN {{ "}}" }}
        with:
          route: GET /repos/:owner/:repo/branches/:branch
          # The following inputs result in "Unexpected input" warnings on the workflow page, but they are correct
          owner: {{ "${{" }} env.TEMPLATE_REPOSITORY_OWNER {{ "}}" }}
          repo: {{ "${{" }} env.TEMPLATE_REPOSITORY_NAME {{ "}}" }}
          branch: master

      - name: Check if template repo was updated
        if: github.event_name == 'schedule'
        id: check-for-template-updates
        run: |
          SECONDS_SINCE_TEMPLATE_REPO_UPDATE=$(( `date +%s` - `date --date={{ "${{" }} fromJson(steps.get-template-repo-data.outputs.data).commit.commit.committer.date {{ "}}" }} +%s` ))
          TEMPLATE_UPDATED=$(( $SECONDS_SINCE_TEMPLATE_REPO_UPDATE < $WORKFLOW_SCHEDULE_INTERVAL ))
          echo "::set-output name=template-updated::$TEMPLATE_UPDATED"

  update-workflows:
    needs: check-for-template-updates
    if: github.event_name != 'schedule' || (github.event_name == 'schedule' && needs.check-for-template-updates.outputs.template-updated == true)

    runs-on: ubuntu-latest

    env:
      WORKFLOW_RESOURCES_FOLDER: tmp/workflow-template
      WORKFLOW_DATA_FOLDER: .github/workflows/data
      WORKFLOW_FOLDER: .github/workflows
      JSON_SCHEMA_FOLDER: tmp/json-schema
      JSON_SCHEMA_FILENAME: github-workflow.json

    strategy:
      fail-fast: false

      # Don't run the matrix jobs in parallel to avoid conflicts when pushing updated workflows
      max-parallel: 1
      matrix:
        # Filenames without the extension. The data file name must match the workflow, but with a _data suffix
        filename:
          {{ jobs["update-workflows"]["strategy"]["matrix"]["filename"]|indent(width=10) }}

    steps:
      - name: Checkout local repository (with token)
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2
        with:
          # In order for the workflow to modify workflows, it must use a token with the "workflow" permission, which the automatically generated secrets.GITHUB_TOKEN doesn't have
          token: {{ "${{" }} secrets.WORKFLOW_UPDATE_TOKEN {{ "}}" }}

      - name: Checkout local repository (without token)
        # The WORKFLOW_UPDATE_TOKEN secret won't be defined when the workflow is triggered from a fork. In this case, it can still validate the changes
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2

      - name: Download workflow template
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://raw.githubusercontent.com/{{ "${{" }} env.TEMPLATE_REPOSITORY_OWNER {{ "}}" }}/{{ "${{" }} env.TEMPLATE_REPOSITORY_NAME {{ "}}" }}/master/templates/{{ "${{" }} matrix.filename.template {{ "}}" }}.yml.j2
          location: {{ "${{" }} env.WORKFLOW_RESOURCES_FOLDER {{ "}}" }}

      - name: Update workflow
        uses: cuchi/jinja2-action@v1.1.0
        with:
          template: {{ "${{" }} env.WORKFLOW_RESOURCES_FOLDER {{ "}}" }}/{{ "${{" }} matrix.filename.template {{ "}}" }}.yml.j2
          data_file: {{ "${{" }} env.WORKFLOW_DATA_FOLDER {{ "}}" }}/{{ "${{" }} matrix.filename.workflow {{ "}}" }}_data.yml
          output_file: {{ "${{" }} env.WORKFLOW_FOLDER {{ "}}" }}/{{ "${{" }} matrix.filename.workflow {{ "}}" }}.yml

      # If no changes were made to workflow, the rest of the steps can be skipped
      - name: Check if workflow was updated
        id: workflow-was-updated
        # Don't fail the workflow run if no changes were made
        continue-on-error: true
        run: test -n "$(git status --porcelain "$WORKFLOW_FOLDER/{{ "${{" }} matrix.filename.workflow {{ "}}" }}.yml")"

      - name: Download JSON schema for workflows
        if: steps.workflow-was-updated.outcome == 'success'
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://json.schemastore.org/github-workflow
          location: {{ "${{" }} env.JSON_SCHEMA_FOLDER {{ "}}" }}
          file-name: {{ "${{" }} env.JSON_SCHEMA_FILENAME {{ "}}" }}

      - name: Install JSON schema validator
        if: steps.workflow-was-updated.outcome == 'success'
        run: sudo npm install --global ajv-cli

      - name: Validate workflow
        if: steps.workflow-was-updated.outcome == 'success'
        run: ajv -s "$JSON_SCHEMA_FOLDER/$JSON_SCHEMA_FILENAME" -d "$WORKFLOW_FOLDER/{{ "${{" }} matrix.filename.workflow {{ "}}" }}.yml"

      # Previous matrix jobs may have already pushed commits updating other workflows
      - name: git pull
        if: steps.workflow-was-updated.outcome == 'success' && github.event_name != 'pull_request'
        run: git pull

      - name: Commit updates to workflow
        # When the workflow is triggered by pull_request event, the workflow should only be validated
        # If the workflow is triggered by a push in a contributor's fork, then the WORKFLOW_UPDATE_TOKEN secret won't be defined and the workflow should only validate changes
        if: steps.workflow-was-updated.outcome == 'success' && github.event_name != 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # Only commit changes to the workflow
          file_pattern: {{ "${{" }} env.WORKFLOW_FOLDER {{ "}}" }}/{{ "${{" }} matrix.filename.workflow {{ "}}" }}.yml
          commit_message: Auto-update {{ "${{" }} matrix.filename.workflow {{ "}}" }} workflow
